def main(u32 instruct,u32 b,u32 c, u32 d) -> field {
    //instruct 0 add
    //instruct 1 div
    //instruct 2 sub
    //instruct 3 not supported; result = 0xFFFFFFFF;
    bool is_add = instruct ==0 ? true: false;
    bool is_div = instruct ==1 ? true: false;
    bool is_sub = instruct ==2 ? true: false;
    bool is_not_supported = instruct == 3? true:false;
    bool is_c_zero = c==0 ? true: false;
    bool is_div_and_c_zero = is_div && is_c_zero;
    assert (is_div_and_c_zero == false);
    u32 add_result = b+c;
    u32 sub_result = b-c;
    u32 divided = c==0 ? 1 : c;
    u32 div_result = b/divided;
    u32 mut result = 0xFFFFFFFF;
    bool is_add_result_match = add_result == d ? true: false;
    bool is_sub_result_match = sub_result == d ? true: false;
    bool is_div_result_match = div_result == d ? true: false;
    bool is_not_support_result_match = 0xFFFFFFFF == d ? true: false;

    bool is_add_valid = is_add && is_add_result_match;
    bool is_sub_valid = is_sub && is_sub_result_match;
    bool is_div_valid = is_div && is_div_result_match;
    bool is_not_valid = is_not_supported && is_not_support_result_match;

    bool final = is_add_valid || is_sub_valid || is_div_valid || is_not_valid;

    assert(final == true);

    return 0;

}